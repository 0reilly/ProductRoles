{"ast":null,"code":"var _jsxFileName = \"/Users/adamoreilly/projects/productroles/client/src/components/JobList.jsx\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport JobFinder from \"../apis/JobFinder\";\nimport { JobsContext } from '../context/JobContext';\nimport \"./App.css\";\n\nconst JobList = props => {\n  const {\n    jobs,\n    setJobs\n  } = useContext(JobsContext);\n  let history = useHistory();\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await JobFinder.get(\"/\");\n        setJobs(response.data.data.jobs);\n      } catch (err) {}\n    };\n\n    fetchData();\n  }, []);\n\n  const handleApplyRedirect = (e, id, link) => {\n    e.stopPropagation();\n    window.location.assign(link);\n  };\n\n  const handleJobSelect = id => {\n    history.push(`/jobs/${id}`);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"list-group mt-3 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"ml-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, \"Today's Product Jobs\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"ml-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, \"(click each row to view job description)\"), /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table table-condensed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, jobs && jobs.sort((a, b) => a.id < b.id ? 1 : -1).map(job => {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      className: job.color === '#fff9c9' ? \"highlight\" : \"none\",\n      onClick: () => handleJobSelect(job.id),\n      key: job.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 29\n      }\n    }, job.name), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 29\n      }\n    }, job.location), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 29\n      }\n    }, job.primary_tag), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: e => handleApplyRedirect(e, job.id, job.link),\n      className: \"btn btn-primary btn-sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 33\n      }\n    }, \"Apply\")));\n  }))));\n};\n\nexport default JobList;","map":{"version":3,"sources":["/Users/adamoreilly/projects/productroles/client/src/components/JobList.jsx"],"names":["React","useContext","useEffect","useState","useHistory","JobFinder","JobsContext","JobList","props","jobs","setJobs","history","fetchData","response","get","data","err","handleApplyRedirect","e","id","link","stopPropagation","window","location","assign","handleJobSelect","push","sort","a","b","map","job","color","name","primary_tag"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect, useState} from 'react'\nimport {useHistory} from \"react-router-dom\"\nimport JobFinder from \"../apis/JobFinder\"\nimport {JobsContext} from '../context/JobContext'\nimport \"./App.css\";\n\n\nconst JobList = (props) => {\n\n    const {jobs, setJobs} = useContext(JobsContext)\n    let history = useHistory()\n\n    useEffect(() => {\n        const fetchData = async () => {\n\n            try {\n                const response = await JobFinder.get(\"/\");\n                setJobs(response.data.data.jobs)\n            } catch (err) {\n\n            }\n        }\n        fetchData();\n\n    }, [])\n\n\n    const handleApplyRedirect = (e, id, link) => {\n        e.stopPropagation()\n        window.location.assign(link);\n    };\n\n    const handleJobSelect = (id) => {\n        history.push(`/jobs/${id}`)\n    };\n\n    return (\n        <div className=\"list-group mt-3 \">\n            <h5 className=\"ml-2\">Today's Product Jobs</h5>\n            <p className=\"ml-2\">(click each row to view job description)</p>\n            <table className=\"table table-condensed\">\n                <tbody>\n                {jobs && jobs.sort((a, b) => a.id < b.id ? 1 : -1).map(job => {\n                    return (\n                        <tr\n                            className={job.color === '#fff9c9' ? \"highlight\" : \"none\"}\n                            onClick={() => handleJobSelect(job.id)}\n                            key={job.id}\n                        >\n                            <td>{job.name}</td>\n                            <td>{job.location}</td>\n                            <td>{job.primary_tag}</td>\n                            <td>\n                                <button\n                                    onClick={(e) => handleApplyRedirect(e, job.id, job.link)}\n                                    className=\"btn btn-primary btn-sm\"\n                                >Apply\n                                </button>\n                            </td>\n                        </tr>\n                    );\n                })}\n                </tbody>\n            </table>\n        </div>\n    )\n}\n\nexport default JobList\n"]},"metadata":{},"sourceType":"module"}