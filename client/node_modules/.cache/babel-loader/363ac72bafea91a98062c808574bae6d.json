{"ast":null,"code":"var _jsxFileName = \"/Users/adamoreilly/Desktop/SP2020/yelp/client/src/components/CheckoutForm.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\n\nconst CheckoutForm = props => {\n  const [succeeded, setSucceeded] = useState(false);\n  const [error, setError] = useState(null);\n  const [processing, setProcessing] = useState('');\n  const [disabled, setDisabled] = useState(true);\n  const [clientSecret, setClientSecret] = useState('');\n  const stripe = useStripe();\n  const elements = useElements();\n  useEffect(() => {\n    // Create PaymentIntent as soon as the page loads\n    window.fetch(\"http://localhost:3006/create-payment-intent\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        items: [{\n          id: \"basic-job-post\"\n        }]\n      })\n    }).then(res => {\n      return res.json();\n    }).then(data => {\n      setClientSecret(data.clientSecret);\n    });\n  }, []);\n  const cardStyle = {\n    style: {\n      base: {\n        color: \"#32325d\",\n        fontFamily: 'Arial, sans-serif',\n        fontSmoothing: \"antialiased\",\n        fontSize: \"16px\",\n        \"::placeholder\": {\n          color: \"#32325d\"\n        }\n      },\n      invalid: {\n        color: \"#fa755a\",\n        iconColor: \"#fa755a\"\n      }\n    }\n  };\n\n  const handleChange = async event => {\n    // Listen for changes in the CardElement\n    // and display any errors as the customer types their card details\n    setDisabled(event.empty);\n    setError(event.error ? event.error.message : \"\");\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setProcessing(true);\n    const payload = await stripe.confirmCardPayment(clientSecret, {\n      payment_method: {\n        card: elements.getElement(CardElement)\n      }\n    });\n\n    if (payload.error) {\n      setError(`Payment failed ${payload.error.message}`);\n      setProcessing(false);\n    } else {\n      setError(null);\n      setProcessing(false);\n      setSucceeded(true);\n      handleForm();\n    }\n  };\n\n  const handleForm = () => {\n    props.form();\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    id: \"payment-form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CardElement, {\n    id: \"card-element\",\n    options: cardStyle,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"p-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    disabled: processing || disabled || succeeded,\n    className: \" btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 28\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    id: \"button-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, processing ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"spinner\",\n    id: \"spinner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }) : \"Post Job Ad - $\"))), error && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-error\",\n    role: \"alert\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, error), /*#__PURE__*/React.createElement(\"p\", {\n    className: succeeded ? \"result-message\" : \"result-message hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, \"Payment succeeded! View your new listing on the Home page!\", /*#__PURE__*/React.createElement(\"a\", {\n    href: `http://localhost:3000/`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, \" \", \"Home.\"), \" An order summary will be emailed to you.\"));\n};\n\nexport default CheckoutForm;","map":{"version":3,"sources":["/Users/adamoreilly/Desktop/SP2020/yelp/client/src/components/CheckoutForm.jsx"],"names":["React","useState","useEffect","CardElement","useStripe","useElements","CheckoutForm","props","succeeded","setSucceeded","error","setError","processing","setProcessing","disabled","setDisabled","clientSecret","setClientSecret","stripe","elements","window","fetch","method","headers","body","JSON","stringify","items","id","then","res","json","data","cardStyle","style","base","color","fontFamily","fontSmoothing","fontSize","invalid","iconColor","handleChange","event","empty","message","handleSubmit","e","preventDefault","payload","confirmCardPayment","payment_method","card","getElement","handleForm","form"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport {\n  CardElement,\n  useStripe,\n  useElements\n} from \"@stripe/react-stripe-js\";\n\nconst CheckoutForm= (props) => {\n  const [succeeded, setSucceeded] = useState(false);\n  const [error, setError] = useState(null);\n  const [processing, setProcessing] = useState('');\n  const [disabled, setDisabled] = useState(true);\n  const [clientSecret, setClientSecret] = useState('');\n  const stripe = useStripe();\n  const elements = useElements();\n  \n  useEffect(() => {\n    \n    // Create PaymentIntent as soon as the page loads\n    window\n      .fetch(\"http://localhost:3006/create-payment-intent\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({items: [{ id: \"basic-job-post\" }]})\n      })\n      .then(res => {\n          \n        return res.json();\n      })\n      .then(data => {\n        setClientSecret(data.clientSecret);\n      });\n  }, []);\n  const cardStyle = {\n    style: {\n      base: {\n        color: \"#32325d\",\n        fontFamily: 'Arial, sans-serif',\n        fontSmoothing: \"antialiased\",\n        fontSize: \"16px\",\n        \"::placeholder\": {\n          color: \"#32325d\"\n        }\n      },\n      invalid: {\n        color: \"#fa755a\",\n        iconColor: \"#fa755a\"\n      }\n    }\n  };\n  const handleChange = async (event) => {\n\n    // Listen for changes in the CardElement\n    // and display any errors as the customer types their card details\n    setDisabled(event.empty);\n    setError(event.error ? event.error.message : \"\");\n  };\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setProcessing(true);\n    const payload = await stripe.confirmCardPayment(clientSecret, {\n      payment_method: {\n        card: elements.getElement(CardElement)\n      }\n    });\n    if (payload.error) {\n      setError(`Payment failed ${payload.error.message}`);\n      setProcessing(false);\n    } else {\n        \n      setError(null);\n      setProcessing(false);\n      setSucceeded(true);\n      handleForm();\n    }\n  };\n\n  const handleForm = () => {\n      \n        props.form();\n  }\n  return (\n    <form id=\"payment-form\" onSubmit={handleSubmit}>\n      <CardElement id=\"card-element\" options={cardStyle} onChange={handleChange} />\n      <div className=\"p-4\"><button\n        disabled={processing || disabled || succeeded}\n        className=\" btn btn-primary\"\n      >\n        <span id=\"button-text\">\n          {processing ? (\n            <div className=\"spinner\" id=\"spinner\"></div>\n          ) : (\n            \"Post Job Ad - $\"\n          )}\n        </span>\n      </button></div>\n      {/* Show any error that happens when processing the payment */}\n      {error && (\n        <div className=\"card-error\" role=\"alert\">\n          {error}\n        </div>\n      )}\n      {/* Show a success message upon completion */}\n      <p className={succeeded ? \"result-message\" : \"result-message hidden\"}>\n        Payment succeeded! View your new listing on the Home page! \n        <a\n          href={`http://localhost:3000/`}\n        >\n          {\" \"}\n          Home.\n        </a> An order summary will be emailed to you.\n      </p>\n    </form>\n  );\n}\n\nexport default CheckoutForm"]},"metadata":{},"sourceType":"module"}