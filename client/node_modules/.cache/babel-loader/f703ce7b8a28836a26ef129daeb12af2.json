{"ast":null,"code":"var _jsxFileName = \"/Users/adamoreilly/projects/productroles/client/src/components/JobListDetail.jsx\";\nimport React, { useContext, useEffect } from 'react';\nimport { useHistory, useParams } from \"react-router-dom\";\nimport ReactDOM from \"react-dom\";\nimport JobFinder from \"../apis/JobFinder\";\nimport { JobsContext } from '../context/JobContext';\nimport MDEditor from '@uiw/react-md-editor';\n\nconst JobListDetail = props => {\n  const {\n    jobs,\n    setJobs\n  } = useContext(JobsContext);\n  const {\n    key\n  } = useParams();\n  let history = useHistory();\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await JobFinder.get(\"/\");\n        setJobs(response.data.data.jobs);\n      } catch (err) {}\n    };\n\n    fetchData();\n  }, []);\n\n  const handleApplyRedirect = (e, id, link) => {\n    e.stopPropagation();\n    window.location.assign(link);\n  };\n\n  const handleJobSelect = id => {\n    console.log(id);\n    history.push(``);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"list-group mt-3 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"ml-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, \"Today's Product Jobs\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"ml-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 63\n    }\n  }, \"(click each row to view job description)\")), /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table table-condensed \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, jobs && jobs.sort((a, b) => a.id < b.id ? 1 : -1).map(job => {\n    if (job.id === key) {\n      console.log(job);\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"tr\", {\n        className: job.color === '#fff9c9' ? \"highlight\" : \"none\",\n        onClick: () => handleJobSelect(job.id),\n        key: job.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 41\n        }\n      }, job.name), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 41\n        }\n      }, job.location), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 41\n        }\n      }, job.primary_tag), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: e => handleApplyRedirect(e, job.id, job.link),\n        className: \"btn btn-primary btn-sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 46\n        }\n      }, \"Apply\"))), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        className: \"container\",\n        colspan: \"999\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row justify-content-center pl-3 pr-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(MDEditor.Markdown, {\n        className: \"\",\n        source: job.description,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 49\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: e => handleApplyRedirect(e, job.id, job.link),\n        className: \"mt-2 btn btn-primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 49\n        }\n      }, \"Apply for this position\")))));\n    } else {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        className: job.color === '#fff9c9' ? \"highlight\" : \"none\",\n        onClick: () => handleJobSelect(job.id),\n        key: job.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 37\n        }\n      }, job.name), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 37\n        }\n      }, job.location), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 37\n        }\n      }, job.primary_tag), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: e => handleApplyRedirect(e, job.id, job.link),\n        className: \"btn btn-primary btn-sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 42\n        }\n      }, \"Apply\")));\n    }\n  }))));\n};\n\nexport default JobListDetail;","map":{"version":3,"sources":["/Users/adamoreilly/projects/productroles/client/src/components/JobListDetail.jsx"],"names":["React","useContext","useEffect","useHistory","useParams","ReactDOM","JobFinder","JobsContext","MDEditor","JobListDetail","props","jobs","setJobs","key","history","fetchData","response","get","data","err","handleApplyRedirect","e","id","link","stopPropagation","window","location","assign","handleJobSelect","console","log","push","sort","a","b","map","job","color","name","primary_tag","description"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,SAA3B,QAA2C,OAA3C;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAqC,kBAArC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,SAASC,WAAT,QAA4B,uBAA5B;AACA,OAAOC,QAAP,MAAqB,sBAArB;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC7B,QAAM;AAACC,IAAAA,IAAD;AAAOC,IAAAA;AAAP,MAAkBX,UAAU,CAACM,WAAD,CAAlC;AACA,QAAM;AAACM,IAAAA;AAAD,MAAQT,SAAS,EAAvB;AACA,MAAIU,OAAO,GAAGX,UAAU,EAAxB;AACAD,EAAAA,SAAS,CAAE,MAAM;AACb,UAAMa,SAAS,GAAG,YAAY;AAC1B,UAAI;AACA,cAAMC,QAAQ,GAAG,MAAMV,SAAS,CAACW,GAAV,CAAc,GAAd,CAAvB;AACAL,QAAAA,OAAO,CAACI,QAAQ,CAACE,IAAT,CAAcA,IAAd,CAAmBP,IAApB,CAAP;AACF,OAHF,CAGG,OAAMQ,GAAN,EAAU,CAEX;AACL,KAPD;;AAQAJ,IAAAA,SAAS;AACZ,GAVQ,EAUP,EAVO,CAAT;;AAcA,QAAMK,mBAAmB,GAAG,CAACC,CAAD,EAAIC,EAAJ,EAAQC,IAAR,KAAiB;AACzCF,IAAAA,CAAC,CAACG,eAAF;AACAC,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuBJ,IAAvB;AACH,GAHD;;AAKA,QAAMK,eAAe,GAAIN,EAAD,IAAQ;AAC5BO,IAAAA,OAAO,CAACC,GAAR,CAAYR,EAAZ;AACAR,IAAAA,OAAO,CAACiB,IAAR,CAAc,EAAd;AACH,GAHD;;AAKA,sBACI,uDACA;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACQ;AAAI,IAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADR,eACsD;AAAG,IAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDADtD,CADA,eAMI;AAAO,IAAA,SAAS,EAAC,wBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKpB,IAAI,IAAIA,IAAI,CAACqB,IAAL,CAAU,CAACC,CAAD,EAAGC,CAAH,KAASD,CAAC,CAACX,EAAF,GAAOY,CAAC,CAACZ,EAAT,GAAc,CAAd,GAAiB,CAAC,CAArC,EAAwCa,GAAxC,CAA4CC,GAAG,IAAI;AACxD,QAAGA,GAAG,CAACd,EAAJ,KAAWT,GAAd,EAAkB;AACdgB,MAAAA,OAAO,CAACC,GAAR,CAAYM,GAAZ;AACA,0BACI,uDAEI;AAAI,QAAA,SAAS,EAAEA,GAAG,CAACC,KAAJ,KAAY,SAAZ,GAAwB,WAAxB,GAAsC,MAArD;AAA8D,QAAA,OAAO,EAAE,MAAMT,eAAe,CAACQ,GAAG,CAACd,EAAL,CAA5F;AAAsG,QAAA,GAAG,EAAEc,GAAG,CAACd,EAA/G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMc,GAAG,CAACE,IAAV,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMF,GAAG,CAACV,QAAV,CAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMU,GAAG,CAACG,WAAV,CAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAK;AAAQ,QAAA,OAAO,EAAGlB,CAAD,IAAOD,mBAAmB,CAACC,CAAD,EAAGe,GAAG,CAACd,EAAP,EAAUc,GAAG,CAACb,IAAd,CAA3C;AAAgE,QAAA,SAAS,EAAC,wBAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAL,CAJJ,CAFJ,eASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAI,QAAA,SAAS,EAAC,WAAd;AAA0B,QAAA,OAAO,EAAC,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,SAAS,EAAC,sCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,QAAD,CAAU,QAAV;AAAmB,QAAA,SAAS,EAAC,EAA7B;AAAgC,QAAA,MAAM,EAAEa,GAAG,CAACI,WAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,eAEI;AAAQ,QAAA,OAAO,EAAGnB,CAAD,IAAOD,mBAAmB,CAACC,CAAD,EAAGe,GAAG,CAACd,EAAP,EAAWc,GAAG,CAACb,IAAf,CAA3C;AAAiE,QAAA,SAAS,EAAC,sBAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAFJ,CADJ,CADJ,CATJ,CADJ;AAoBH,KAtBD,MAuBI;AACA,0BACI;AAAI,QAAA,SAAS,EAAEa,GAAG,CAACC,KAAJ,KAAY,SAAZ,GAAwB,WAAxB,GAAsC,MAArD;AAA8D,QAAA,OAAO,EAAE,MAAMT,eAAe,CAACQ,GAAG,CAACd,EAAL,CAA5F;AAAsG,QAAA,GAAG,EAAEc,GAAG,CAACd,EAA/G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMc,GAAG,CAACE,IAAV,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMF,GAAG,CAACV,QAAV,CAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMU,GAAG,CAACG,WAAV,CAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAK;AAAQ,QAAA,OAAO,EAAGlB,CAAD,IAAOD,mBAAmB,CAACC,CAAD,EAAGe,GAAG,CAACd,EAAP,EAAUc,GAAG,CAACb,IAAd,CAA3C;AAAgE,QAAA,SAAS,EAAC,wBAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAL,CAJJ,CADJ;AAQH;AAGJ,GApCQ,CADb,CADJ,CANJ,CADJ;AAkDH,CA9ED;;AAgFA,eAAed,aAAf","sourcesContent":["import React, {useContext, useEffect} from 'react'\nimport { useHistory ,useParams} from \"react-router-dom\"\nimport ReactDOM from \"react-dom\";\nimport JobFinder from \"../apis/JobFinder\"\nimport { JobsContext } from '../context/JobContext'\nimport MDEditor from '@uiw/react-md-editor';\n\nconst JobListDetail = (props) => {\n    const {jobs, setJobs} = useContext(JobsContext)\n    const {key} = useParams();\n    let history = useHistory()\n    useEffect( () => {\n        const fetchData = async () => {\n            try {\n                const response = await JobFinder.get(\"/\");\n                setJobs(response.data.data.jobs)\n             } catch(err){\n\n             }\n        }\n        fetchData();\n    },[])\n\n\n\n    const handleApplyRedirect = (e, id, link) => {\n        e.stopPropagation()\n        window.location.assign(link);\n    };\n\n    const handleJobSelect = (id) => {\n        console.log(id)\n        history.push(``)\n    };\n\n    return (\n        <>\n        <div className=\"list-group mt-3 \">\n                <h5 className=\"ml-2\">Today's Product Jobs</h5><p className=\"ml-2\">(click each row to view job description)</p>\n\n            </div>\n\n            <table className=\"table table-condensed \">\n                <tbody>\n                    {jobs && jobs.sort((a,b) => a.id < b.id ? 1: -1).map(job => {\n                        if(job.id === key){\n                            console.log(job)\n                            return(\n                                <>\n\n                                    <tr className={job.color==='#fff9c9' ? \"highlight\" : \"none\" } onClick={() => handleJobSelect(job.id)} key={job.id}>\n                                        <td >{job.name}</td>\n                                        <td >{job.location}</td>\n                                        <td >{job.primary_tag}</td>\n                                        <td ><button onClick={(e) => handleApplyRedirect(e,job.id,job.link)} className=\"btn btn-primary btn-sm\">Apply</button></td>\n                                    </tr>\n\n                                    <tr>\n                                        <td className=\"container\" colspan=\"999\">\n                                            <div className=\"row justify-content-center pl-3 pr-3\">\n                                                <MDEditor.Markdown className=\"\" source={job.description}/>\n                                                <button onClick={(e) => handleApplyRedirect(e,job.id, job.link)} className=\"mt-2 btn btn-primary\">Apply for this position</button>\n                                            </div>\n                                        </td>\n                                    </tr>\n                                </>\n                            );\n                        }\n                        else{\n                            return(\n                                <tr className={job.color==='#fff9c9' ? \"highlight\" : \"none\" } onClick={() => handleJobSelect(job.id)} key={job.id}>\n                                    <td >{job.name}</td>\n                                    <td >{job.location}</td>\n                                    <td >{job.primary_tag}</td>\n                                    <td ><button onClick={(e) => handleApplyRedirect(e,job.id,job.link)} className=\"btn btn-primary btn-sm\">Apply</button></td>\n                                </tr>\n                            );\n                        }\n\n\n                    })}\n                </tbody>\n            </table>\n           </>\n    )\n}\n\nexport default JobListDetail\n"]},"metadata":{},"sourceType":"module"}