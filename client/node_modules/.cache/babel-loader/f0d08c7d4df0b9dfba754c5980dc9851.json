{"ast":null,"code":"var _jsxFileName = \"/Users/adamoreilly/Desktop/SP2020/yelp/client/src/components/JobListDetail.jsx\";\nimport React, { useContext, useEffect } from 'react';\nimport { useHistory, useParams } from \"react-router-dom\";\nimport JobFinder from \"../apis/JobFinder\";\nimport { JobsContext } from '../context/JobContext';\nimport MDEditor from '@uiw/react-md-editor';\n\nconst JobListDetail = props => {\n  const {\n    jobs,\n    setJobs\n  } = useContext(JobsContext);\n  const {\n    id\n  } = useParams();\n  let history = useHistory();\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await JobFinder.get(\"/\");\n        setJobs(response.data.data.jobs);\n      } catch (err) {}\n    };\n\n    fetchData();\n  }, []);\n\n  const handleApplyRedirect = (e, id, link) => {\n    e.stopPropagation();\n    window.location.assign(link);\n  };\n\n  const handleJobSelect = id => {\n    history.push(``);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"list-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, \"Today's Product Jobs\"), /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table table-hover table-dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, jobs && jobs.map(job => {\n    if (job.id === id) {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"tr\", {\n        className: \"\",\n        onClick: () => handleJobSelect(job.id),\n        key: job.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        className: \"pl-5 pr-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 41\n        }\n      }, job.name), /*#__PURE__*/React.createElement(\"td\", {\n        className: \"pl-5 pr-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 41\n        }\n      }, job.location), /*#__PURE__*/React.createElement(\"td\", {\n        className: \"pl-5 pr-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 41\n        }\n      }, job.primary_tag), /*#__PURE__*/React.createElement(\"td\", {\n        className: \"pl-5 pr-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: e => handleApplyRedirect(e, job.id, job.link),\n        className: \"btn btn-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 67\n        }\n      }, \"Apply\"))), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(MDEditor.Markdown, {\n        className: \"p-3\",\n        source: job.description,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 41\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: e => handleApplyRedirect(e, job.id, job.link),\n        className: \"p-4 btn btn-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 41\n        }\n      }, \"Apply for this position\")));\n    } else {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        className: \"\",\n        onClick: () => handleJobSelect(job.id),\n        key: job.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        className: \"pl-5 pr-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 41\n        }\n      }, job.name), /*#__PURE__*/React.createElement(\"td\", {\n        className: \"pl-5 pr-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 41\n        }\n      }, job.location), /*#__PURE__*/React.createElement(\"td\", {\n        className: \"pl-5 pr-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 41\n        }\n      }, job.primary_tag), /*#__PURE__*/React.createElement(\"td\", {\n        className: \"pl-5 pr-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: e => handleApplyRedirect(e, job.id, job.link),\n        className: \"btn btn-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 67\n        }\n      }, \"Apply\")));\n    }\n  }))));\n};\n\nexport default JobListDetail;","map":{"version":3,"sources":["/Users/adamoreilly/Desktop/SP2020/yelp/client/src/components/JobListDetail.jsx"],"names":["React","useContext","useEffect","useHistory","useParams","JobFinder","JobsContext","MDEditor","JobListDetail","props","jobs","setJobs","id","history","fetchData","response","get","data","err","handleApplyRedirect","e","link","stopPropagation","window","location","assign","handleJobSelect","push","map","job","name","primary_tag","description"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect} from 'react'\nimport { useHistory ,useParams} from \"react-router-dom\"\nimport JobFinder from \"../apis/JobFinder\"\nimport { JobsContext } from '../context/JobContext'\nimport MDEditor from '@uiw/react-md-editor';\n\nconst JobListDetail = (props) => {\n    const {jobs, setJobs} = useContext(JobsContext)\n    const {id} = useParams();\n    let history = useHistory()\n    useEffect( () => {\n        const fetchData = async () => {\n            try {\n                const response = await JobFinder.get(\"/\");\n                setJobs(response.data.data.jobs)\n             } catch(err){\n     \n             }\n        }\n        fetchData();\n    },[])\n\n    \n\n    const handleApplyRedirect = (e, id, link) => {\n        e.stopPropagation()\n        window.location.assign(link);\n    };\n\n    const handleJobSelect = (id) => {\n        history.push(``)\n    };\n\n    return (\n        <div className=\"list-group\">\n            <h2>Today's Product Jobs</h2>\n            <table className=\"table table-hover table-dark\"> \n                <tbody>\n                    {jobs && jobs.map(job => {\n                        if(job.id === id){\n                            return(\n                                <>\n                                <tr className=\"\"onClick={() => handleJobSelect(job.id)} key={job.id}>\n                                        <td className=\"pl-5 pr-5\">{job.name}</td>\n                                        <td className=\"pl-5 pr-5\">{job.location}</td>\n                                        <td className=\"pl-5 pr-5\">{job.primary_tag}</td>\n                                        <td className=\"pl-5 pr-5\"><button onClick={(e) => handleApplyRedirect(e,job.id,job.link)} className=\"btn btn-danger\">Apply</button></td>\n                                    </tr>\n                            \n                                <tr>\n                                        <MDEditor.Markdown className=\"p-3\" source={job.description}/>\n                                        <button onClick={(e) => handleApplyRedirect(e,job.id, job.link)} className=\"p-4 btn btn-danger\">Apply for this position</button>\n                                </tr> \n                                </>\n                                    \n                                \n                              \n                            );\n                        }\n                        else{\n                            return(\n                                <tr className=\"\"onClick={() => handleJobSelect(job.id)} key={job.id}>\n                                        <td className=\"pl-5 pr-5\">{job.name}</td>\n                                        <td className=\"pl-5 pr-5\">{job.location}</td>\n                                        <td className=\"pl-5 pr-5\">{job.primary_tag}</td>\n                                        <td className=\"pl-5 pr-5\"><button onClick={(e) => handleApplyRedirect(e,job.id,job.link)} className=\"btn btn-danger\">Apply</button></td>\n                                    </tr>\n                                \n                            );\n                        }\n                        \n                        \n                    })}\n                </tbody>\n            </table>\n        </div>\n    )\n}\n\nexport default JobListDetail\n"]},"metadata":{},"sourceType":"module"}