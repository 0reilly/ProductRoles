{"ast":null,"code":"var _jsxFileName = \"/Users/adamoreilly/projects/productroles/client/src/components/JobListDetail.jsx\";\nimport React, { useContext, useEffect } from 'react';\nimport { useHistory, useParams } from \"react-router-dom\";\nimport ReactDOM from \"react-dom\";\nimport JobFinder from \"../apis/JobFinder\";\nimport { JobsContext } from '../context/JobContext';\nimport MDEditor from '@uiw/react-md-editor';\n\nconst JobListDetail = props => {\n  const {\n    jobs,\n    setJobs\n  } = useContext(JobsContext);\n  const {\n    id\n  } = useParams();\n  let history = useHistory();\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await JobFinder.get(\"/\");\n        setJobs(response.data.data.jobs);\n      } catch (err) {}\n    };\n\n    fetchData();\n  }, []);\n\n  const handleApplyRedirect = (e, id, link) => {\n    e.stopPropagation();\n    window.location.assign(link);\n  };\n\n  const handleJobSelect = id => {\n    history.push(``);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"list-group mt-3 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"ml-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, \"Today's Product Jobs\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"ml-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, \"(click each row to view job description)\"), /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table table-condensed \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, jobs && jobs.sort((a, b) => a.id < b.id ? 1 : -1).map(job => {\n    if (job.id === id) {\n      console.log(id);\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"tr\", {\n        className: job.color === '#fff9c9' ? \"highlight\" : \"none\",\n        onClick: () => handleJobSelect(job.id),\n        key: job.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 37\n        }\n      }, job.name), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 37\n        }\n      }, job.location), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 37\n        }\n      }, job.primary_tag), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: e => handleApplyRedirect(e, job.id, job.link),\n        className: \"btn btn-primary btn-sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 41\n        }\n      }, \"Apply\"))), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        className: \"container\",\n        colspan: \"999\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row justify-content-center pl-3 pr-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(MDEditor.Markdown, {\n        className: \"\",\n        source: job.description,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 45\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: e => handleApplyRedirect(e, job.id, job.link),\n        className: \"mt-2 btn btn-primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 45\n        }\n      }, \"Apply for this position\")))));\n    } else {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        className: job.color === '#fff9c9' ? \"highlight\" : \"none\",\n        onClick: () => handleJobSelect(job.id),\n        key: job.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 33\n        }\n      }, job.name), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 33\n        }\n      }, job.location), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 33\n        }\n      }, job.primary_tag), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: e => handleApplyRedirect(e, job.id, job.link),\n        className: \"btn btn-primary btn-sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 37\n        }\n      }, \"Apply\")));\n    }\n  }))));\n};\n\nexport default JobListDetail;","map":{"version":3,"sources":["/Users/adamoreilly/projects/productroles/client/src/components/JobListDetail.jsx"],"names":["React","useContext","useEffect","useHistory","useParams","ReactDOM","JobFinder","JobsContext","MDEditor","JobListDetail","props","jobs","setJobs","id","history","fetchData","response","get","data","err","handleApplyRedirect","e","link","stopPropagation","window","location","assign","handleJobSelect","push","sort","a","b","map","job","console","log","color","name","primary_tag","description"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect} from 'react'\nimport {useHistory, useParams} from \"react-router-dom\"\nimport ReactDOM from \"react-dom\";\nimport JobFinder from \"../apis/JobFinder\"\nimport {JobsContext} from '../context/JobContext'\nimport MDEditor from '@uiw/react-md-editor';\n\nconst JobListDetail = (props) => {\n    const {jobs, setJobs} = useContext(JobsContext)\n    const {id} = useParams();\n    let history = useHistory()\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const response = await JobFinder.get(\"/\");\n                setJobs(response.data.data.jobs)\n            } catch (err) {\n\n            }\n        }\n        fetchData();\n    }, [])\n\n\n    const handleApplyRedirect = (e, id, link) => {\n        e.stopPropagation()\n        window.location.assign(link);\n    };\n\n    const handleJobSelect = (id) => {\n        history.push(``)\n    };\n\n    return (\n        <div className=\"list-group mt-3 \">\n            <h5 className=\"ml-2\">Today's Product Jobs</h5>\n            <p className=\"ml-2\">(click each row to view job description)</p>\n            <table className=\"table table-condensed \">\n                <tbody>\n                {jobs && jobs.sort((a, b) => a.id < b.id ? 1 : -1).map(job => {\n                    if (job.id === id) {\n                        console.log(id);\n                        return (\n                            <>\n                                <tr\n                                    className={job.color === '#fff9c9' ? \"highlight\" : \"none\"}\n                                    onClick={() => handleJobSelect(job.id)}\n                                    key={job.id}\n                                >\n                                    <td>{job.name}</td>\n                                    <td>{job.location}</td>\n                                    <td>{job.primary_tag}</td>\n                                    <td>\n                                        <button\n                                            onClick={(e) => handleApplyRedirect(e, job.id, job.link)}\n                                            className=\"btn btn-primary btn-sm\"\n                                        >Apply\n                                        </button>\n                                    </td>\n                                </tr>\n\n                                <tr>\n                                    <td className=\"container\" colspan=\"999\">\n                                        <div className=\"row justify-content-center pl-3 pr-3\">\n                                            <MDEditor.Markdown className=\"\" source={job.description} />\n                                            <button\n                                                onClick={(e) => handleApplyRedirect(e, job.id, job.link)}\n                                                className=\"mt-2 btn btn-primary\"\n                                            >Apply for this position\n                                            </button>\n                                        </div>\n                                    </td>\n                                </tr>\n                            </>\n                        );\n                    } else {\n                        return (\n                            <tr\n                                className={job.color === '#fff9c9' ? \"highlight\" : \"none\"}\n                                onClick={() => handleJobSelect(job.id)}\n                                key={job.id}\n                            >\n                                <td>{job.name}</td>\n                                <td>{job.location}</td>\n                                <td>{job.primary_tag}</td>\n                                <td>\n                                    <button\n                                        onClick={(e) => handleApplyRedirect(e, job.id, job.link)}\n                                        className=\"btn btn-primary btn-sm\"\n                                    >Apply\n                                    </button>\n                                </td>\n                            </tr>\n                        );\n                    }\n\n\n                })}\n                </tbody>\n            </table>\n        </div>\n    )\n}\n\nexport default JobListDetail\n"]},"metadata":{},"sourceType":"module"}