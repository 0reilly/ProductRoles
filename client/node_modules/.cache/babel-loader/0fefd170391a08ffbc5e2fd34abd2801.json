{"ast":null,"code":"var _jsxFileName = \"/Users/adamoreilly/projects/productroles/client/src/components/CheckoutForm.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./App.css\";\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\n\nconst CheckoutForm = props => {\n  const [succeeded, setSucceeded] = useState(false);\n  const [error, setError] = useState(null);\n  const [processing, setProcessing] = useState('');\n  const [disabled, setDisabled] = useState(true);\n  const [clientSecret, setClientSecret] = useState('');\n  const stripe = useStripe();\n  const elements = useElements();\n  let history = useHistory();\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n  const cardStyle = {\n    style: {\n      base: {\n        color: \"#32325d\",\n        fontFamily: 'Arial, sans-serif',\n        fontSmoothing: \"antialiased\",\n        fontSize: \"16px\",\n        \"::placeholder\": {\n          color: \"#32325d\"\n        }\n      },\n      invalid: {\n        color: \"#fa755a\",\n        iconColor: \"#fa755a\"\n      }\n    }\n  };\n\n  const handleChange = async event => {\n    setDisabled(event.empty);\n    setError(event.error ? event.error.message : \"\");\n  };\n\n  const paymentIntent = async e => {\n    e.preventDefault();\n    window.fetch(\"http://localhost:3001/create-payment-intent\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        items: [{\n          price: props.price\n        }]\n      })\n    }).then(res => {\n      return res.json();\n    }).then(data => {\n      console.log(\"payment intent created\" + data.clientSecret);\n      handleSubmit(data.clientSecret);\n    });\n  };\n\n  const handleSubmit = async clientSecret => {\n    console.log(\"confirming payment\");\n    setProcessing(true);\n    const payload = await stripe.confirmCardPayment(clientSecret, {\n      payment_method: {\n        card: elements.getElement(CardElement)\n      }\n    });\n\n    if (payload.error) {\n      setError(`Payment failed ${payload.error.message}`);\n      setProcessing(false);\n    } else {\n      setError(null);\n      setProcessing(false);\n      setSucceeded(true);\n      handleForm();\n    }\n  };\n\n  const goHome = () => {\n    history.push(\"/\");\n  };\n\n  const handleForm = () => {\n    props.form();\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    id: \"payment-form\",\n    onSubmit: paymentIntent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardElement, {\n    id: \"card-element\",\n    options: cardStyle,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: succeeded ? \"p-4 row justified-content-center result-message hidden\" : \"p-4 row justified-content-center result-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    disabled: processing || disabled || succeeded,\n    className: \"col btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    id: \"button-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, processing ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"spinner\",\n    id: \"spinner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 15\n    }\n  }) : \"Post Job Ad\", \" $\", props.price / 100))), error && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-error\",\n    role: \"alert\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }\n  }, error), /*#__PURE__*/React.createElement(\"div\", {\n    className: succeeded ? \"p-4 justify-content-center result-message\" : \"p-4 justify-content-center result-message hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary\",\n    onClick: goHome,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 21\n    }\n  }, \"Home.\")), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 21\n    }\n  }, \"Payment succeeded! View your new listing on the Home page! An order summary will be emailed to you.\"))));\n};\n\nexport default CheckoutForm;","map":{"version":3,"sources":["/Users/adamoreilly/projects/productroles/client/src/components/CheckoutForm.jsx"],"names":["React","useState","useEffect","useHistory","CardElement","useStripe","useElements","CheckoutForm","props","succeeded","setSucceeded","error","setError","processing","setProcessing","disabled","setDisabled","clientSecret","setClientSecret","stripe","elements","history","window","scrollTo","cardStyle","style","base","color","fontFamily","fontSmoothing","fontSize","invalid","iconColor","handleChange","event","empty","message","paymentIntent","e","preventDefault","fetch","method","headers","body","JSON","stringify","items","price","then","res","json","data","console","log","handleSubmit","payload","confirmCardPayment","payment_method","card","getElement","handleForm","goHome","push","form"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport {useHistory} from \"react-router-dom\"\nimport \"./App.css\";\nimport {\n    CardElement,\n    useStripe,\n    useElements\n} from \"@stripe/react-stripe-js\";\n\nconst CheckoutForm = (props) => {\n    const [succeeded, setSucceeded] = useState(false);\n    const [error, setError] = useState(null);\n    const [processing, setProcessing] = useState('');\n    const [disabled, setDisabled] = useState(true);\n    const [clientSecret, setClientSecret] = useState('');\n    const stripe = useStripe();\n    const elements = useElements();\n    let history = useHistory();\n\n    useEffect(() => {\n        window.scrollTo(0, 0);\n    }, []);\n\n    const cardStyle = {\n        style: {\n            base: {\n                color: \"#32325d\",\n                fontFamily: 'Arial, sans-serif',\n                fontSmoothing: \"antialiased\",\n                fontSize: \"16px\",\n                \"::placeholder\": {\n                    color: \"#32325d\"\n                }\n            },\n            invalid: {\n                color: \"#fa755a\",\n                iconColor: \"#fa755a\"\n            }\n        }\n    };\n    const handleChange = async (event) => {\n        setDisabled(event.empty);\n        setError(event.error ? event.error.message : \"\");\n    };\n\n    const paymentIntent = async (e) => {\n        e.preventDefault();\n\n        window\n            .fetch(\"http://localhost:3001/create-payment-intent\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({items: [{price: props.price}]})\n            })\n            .then(res => {\n\n                return res.json();\n\n            })\n            .then(data => {\n                console.log(\"payment intent created\" + data.clientSecret)\n                handleSubmit(data.clientSecret);\n            });\n    }\n\n    const handleSubmit = async (clientSecret) => {\n        console.log(\"confirming payment\")\n        setProcessing(true);\n        const payload = await stripe.confirmCardPayment(clientSecret, {\n            payment_method: {\n                card: elements.getElement(CardElement)\n            }\n        });\n        if (payload.error) {\n            setError(`Payment failed ${payload.error.message}`);\n            setProcessing(false);\n        } else {\n\n            setError(null);\n            setProcessing(false);\n            setSucceeded(true);\n            handleForm();\n        }\n    };\n\n    const goHome = () => {\n        history.push(\"/\")\n    }\n\n    const handleForm = () => {\n\n        props.form();\n    }\n    return (\n        <form id=\"payment-form\" onSubmit={paymentIntent}>\n            <CardElement id=\"card-element\" options={cardStyle} onChange={handleChange} />\n            <div className={succeeded ? \"p-4 row justified-content-center result-message hidden\" : \"p-4 row justified-content-center result-message\"}>\n                <button\n                    disabled={processing || disabled || succeeded}\n                    className=\"col btn btn-primary\"\n                >\n        <span id=\"button-text\">\n          {processing ? (\n              <div className=\"spinner\" id=\"spinner\"></div>\n          ) : (\n              \"Post Job Ad\"\n          )} ${props.price / 100}\n        </span>\n                </button>\n            </div>\n            {/* Show any error that happens when processing the payment */}\n            {error && (\n                <div className=\"card-error\" role=\"alert\">\n                    {error}\n                </div>\n            )}\n            {/* Show a success message upon completion */}\n            <div className={succeeded ? \"p-4 justify-content-center result-message\" : \"p-4 justify-content-center result-message hidden\"}>\n                <div class=\"row\">\n                    <button className=\"btn btn-primary\" onClick={goHome}>\n                        Home.\n                    </button>\n                </div>\n                <div class=\"row\">\n                    <p>\n                        Payment succeeded! View your new listing on the Home page! An order summary will be emailed to you.\n                    </p>\n                </div>\n            </div>\n\n        </form>\n    );\n}\n\nexport default CheckoutForm\n"]},"metadata":{},"sourceType":"module"}